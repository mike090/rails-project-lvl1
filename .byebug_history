skip
control
n
control
skip
control
control.name
renderer
s
HexletCode::Rendering.registred_renderers
control
n
@model
controls
s
skip
s
values
s
values[:data][:controls]
n
values
s
n
control_loader
n
keys.sort.hash
control_loaders
s
data_keys
n
control_data
n
s
skip
control_loader
n
exit
control_loaders
s
data_keys
control_data
skip
args
name
s
n
control_fabric
n
params_map.hash
@control_fabrics
s
exit
control_fabrics.count
control_fabrics
get_control_fabric []
params_map.sort.hash
params_map
control_fabric
n
exit
control_fabric
n
s
form_controls
params_map.sort.hash
params_map
args
skip
values
control_data.controls
control_data
n
control_data
n
s
skip
n
s
n
s
skip
n
result
n
sn
s
result
n
self
s
form.to_h
skip
n
control_data
n
result
n
s
skip
data
n
s
n
skip
n
values
s
control_data
values
control_data
n
skip
n
values
n
values
skip
n
s
attrs[:data]
n
builder
attrs
n
attrs
n
attrs
s
renderer.render_control **h
h = HexletCode::Control.new(type: control_name).to_h
HexletCode::Control.new(type: control_name).to_h
HexletCode::Control.new(type: control_name)
n
skip
attrs
s
n
attrs
n
s
form.to_h
skip
s
form_data
n
form_data
n
attrs
skip
n
form_data.controls
form_data
n
attrs
skip
attrs
skip
n
form_data
n
attrs
skip
n
form_data
n
attrs
skip
n
s
n
attrs
n
s
form.to_h
n
s
skip
n
s
n
s
**form.to_h
form.to_h
n
attr
s
n
exit
n
s
form.to_h
form
n
s
skip
n
builders[:test_control]
attrs
builders
n
attrs
n
self.registred_controls
self.registed_controls
attrs
skip
n
s
n
s
n
attrs
n
s
skip
attrs
skip
exit
attrs
exit
data.delete :controls
data
self.controls
skip
self.controls
skip
n
skip
n
control_data
s
self[:controls]
value
n
control_data
skip
n
s
n
skip
n
controls
s
skip
self[:controls]
n
controls_data
self
self.model
self.controls
self
@data
result
skip
n
